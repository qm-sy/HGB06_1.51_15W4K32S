C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Output\key.obj
COMPILER INVOKED BY: D:\APP\Keil_v5\C51\BIN\C51.EXE Src\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Keil_v5
                    -\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) OBJECT(.\Output\key.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "key.h"
   3          #include "stdint.h"
   4          #include "timer.h"
   5          #include "pwm.h"
   6          #include "screen.h"
   7          #include "delay.h"
   8          #include "eeprom.h"
   9          #include "stdio.h"
  10          #include "sync.h"
  11          
  12          bit on_off = 1;
  13          
  14          bit sync_bit = 0;
  15          
  16          uint8_t wind_num = 0;
  17          uint8_t power_num = 0;
  18          uint8_t mode_num = 0;
  19          uint8_t power_statu = 0;
  20          uint8_t temp_num = 80;
  21          
  22          uint8_t key_val = 0;
  23          
  24          uint8_t mode_info[5];
  25          
  26          bit sync_delay_bit = 0;
  27          bit temp_delay_bit = 0;
  28          
  29          
  30          void button_scan()
  31          {
  32   1          uint8_t continue_cnt1;
  33   1          uint8_t continue_cnt2;
  34   1          if(scan_start_bit == 1)
  35   1          {
  36   2              switch(key_val)
  37   2              {
  38   3      //            case PowerKey:
  39   3      //                power_key();
  40   3      //                break;
  41   3                  
  42   3                  case UpKey:
  43   3                      up_key();
  44   3                      delay_ms(50);
  45   3                      break;
  46   3                  
  47   3                  case ChannelChoose:
  48   3                      continue_cnt1 = 100;
  49   3                      while((key_val==ChannelChoose)&&(continue_cnt1>0))
  50   3                      {
  51   4                          continue_cnt1--; 
  52   4                          delay_ms(10);
  53   4                      }
  54   3                      if(continue_cnt1 == 0)           //长按1s判断，开启同步 
C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 2   

  55   3                      {
  56   4                          temp_set();
  57   4                      }
  58   3      
  59   3                      if(temp_delay_bit == 0)         //短按，mode切换
  60   3                      {
  61   4                          channel_choose();
  62   4                      }
  63   3                      delay_ms(50);
  64   3                      break;
  65   3      //            case FunctionKey:
  66   3                  
  67   3                  case ModeChoose:                    //复用同步切换、mode切换
  68   3                      continue_cnt2 = 100;
  69   3                      while((key_val==ModeChoose)&&(continue_cnt2>0))
  70   3                      {
  71   4                          continue_cnt2--; 
  72   4                          delay_ms(10);
  73   4                      }
  74   3                      
  75   3                      if(continue_cnt2 == 0)           //长按1s判断，开启同步 
  76   3                      {
  77   4                          sync_choose();
  78   4                      }
  79   3      
  80   3                      if(sync_delay_bit == 0)         //短按，mode切换
  81   3                      {
  82   4                          mode_choose();
  83   4                      }
  84   3                      
  85   3                      delay_ms(50);
  86   3                      break;
  87   3                      
  88   3                  case DownKey:
  89   3                      down_key();
  90   3                      delay_ms(50);
  91   3                      break;
  92   3                  
  93   3                  case FanUp:
  94   3                      fan_up();   
  95   3                      delay_ms(50); 
  96   3                      break;
  97   3                  
  98   3                  case FanDown:
  99   3                      fan_down();          
 100   3                      delay_ms(50);
 101   3                      break;
 102   3      
 103   3              }
 104   2              if(power_bit==1)
 105   2              {
 106   3                  sun_dis(DIS_ON);
 107   3              }
 108   2              scan_stop_bit = 1;
 109   2              scan_start_bit = 0;
 110   2          }
 111   1      }
 112          
 113          void fan_up()
 114          {
 115   1          char up_num1 = 0;
 116   1          up_num1 = wind_num;
C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 3   

 117   1          
 118   1          buzzer=buzzer_bit=0;
 119   1          
 120   1          up_num1 += 1;
 121   1          if(up_num1>6)
 122   1          {
 123   2              up_num1 = 6;
 124   2          }
 125   1          
 126   1          wind_num = up_num1;
 127   1          wind_crl(wind_num);
 128   1          wind_dis(wind_num);
 129   1          
 130   1          eeprom_data_write();
 131   1      }
 132          
 133          void fan_down()
 134          {
 135   1          char down_num1 = 0;
 136   1          down_num1 = wind_num;
 137   1          
 138   1          buzzer=buzzer_bit=0;
 139   1          
 140   1          down_num1 -= 1;
 141   1          if(down_num1<0)
 142   1          {
 143   2              down_num1 = 0;
 144   2          }
 145   1      
 146   1          wind_num = down_num1;
 147   1          wind_crl(wind_num);
 148   1          wind_dis(wind_num);
 149   1          
 150   1          eeprom_data_write();
 151   1      }
 152          
 153          void up_key()
 154          {
 155   1          char up_num2 = 0;
 156   1          up_num2 = power_num;
 157   1          
 158   1          buzzer=buzzer_bit=0;
 159   1          
 160   1          up_num2 += 5;
 161   1          if(up_num2>100)
 162   1          {
 163   2              up_num2 = 100;
 164   2          }
 165   1          
 166   1          power_num = up_num2;
 167   1          power_crl(power_num);
 168   1          num_dis(power_num);
 169   1          channel_dis(channel_num);
 170   1          percentage_dis(DIS_ON);
 171   1          
 172   1          eeprom_data_write();
 173   1      }
 174          
 175          void down_key()
 176          {
 177   1          char down_num2 = 0;
 178   1          down_num2 = power_num;
C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 4   

 179   1          
 180   1          buzzer=buzzer_bit=0;
 181   1          
 182   1          down_num2 -= 5;
 183   1          if(down_num2<0)
 184   1          {
 185   2              down_num2 = 0;
 186   2          }
 187   1          
 188   1          power_num = down_num2;
 189   1          power_crl(power_num);
 190   1          num_dis(power_num);
 191   1          channel_dis(channel_num);
 192   1          percentage_dis(DIS_ON);
 193   1          
 194   1          eeprom_data_write();
 195   1      }
 196          
 197          void channel_choose()
 198          {
 199   1          buzzer=buzzer_bit=0;
 200   1          
 201   1          if(channel_num==7)
 202   1          {
 203   2              channel_num = 1;
 204   2          }
 205   1          else
 206   1          {
 207   2              channel_num += 1;
 208   2          }
 209   1          channel_dis(channel_num);
 210   1          if(power_bit==1)
 211   1          {
 212   2              sun_dis(DIS_ON);
 213   2          }
 214   1          eeprom_data_write();
 215   1      }
 216          
 217          void temp_set()
 218          {
 219   1          unsigned char num3 = 0;
 220   1          num3 = temp_num;
 221   1          
 222   1          buzzer=buzzer_bit=0;
 223   1          delay_ms(500);
 224   1          while(key_val!=ChannelChoose)
 225   1          {
 226   2              if(temp_dis_bit)
 227   2              {
 228   3                  num_dis(temp_num);
 229   3                  Celsius_dis(DIS_ON);
 230   3                  
 231   3              }
 232   2              if(~temp_dis_bit)
 233   2              {
 234   3                  lcd_write_val(addr_tab[ADDR_0B],0x00);
 235   3      
 236   3                  lcd_write_val(addr_tab[ADDR_0A],0X00);
 237   3      
 238   3                  lcd_write_val(addr_tab[ADDR_07],0X00);
 239   3      
 240   3                  lcd_write_val(addr_tab[ADDR_06],0X00);
C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 5   

 241   3                  
 242   3                  Celsius_dis(DIS_ON);
 243   3                  
 244   3              }
 245   2              if(key_val == UpKey)
 246   2              {
 247   3                  buzzer=buzzer_bit=0;
 248   3                  num3+=5;
 249   3                  if(num3>200)
 250   3                  {
 251   4                      num3 = 200;
 252   4                  }
 253   3                  temp_num = num3;
 254   3      
 255   3                  delay_ms(100);
 256   3              }
 257   2              if(key_val == DownKey)
 258   2              {
 259   3                  buzzer=buzzer_bit=0;
 260   3                  num3-=5;
 261   3                  if(num3<50)
 262   3                  {
 263   4                      num3 = 50;
 264   4                  }
 265   3                  temp_num = num3;
 266   3      
 267   3                  delay_ms(100);
 268   3              }
 269   2          }
 270   1          
 271   1          temp_delay_bit = 1;         //延时1s  防止长按、短按误触 
 272   1          
 273   1          num_dis(power_num);           
 274   1          channel_dis(channel_num);
 275   1          Celsius_dis(DIS_OFF);
 276   1          percentage_dis(DIS_ON);
 277   1          if(power_bit==1)
 278   1          {
 279   2              sun_dis(DIS_ON);
 280   2          }
 281   1          eeprom_data_write();
 282   1      }
 283          
 284          void mode_choose()
 285          {
 286   1          buzzer=buzzer_bit=0;
 287   1          mode_num += 1;
 288   1          if(mode_num==6)
 289   1          {
 290   2              mode_num = 1;
 291   2          }
 292   1          
 293   1          lcd_clear();                //一次清屏
 294   1          
 295   1          percentage_dis(DIS_OFF);
 296   1          mode_dis(DIS_ON);       
 297   1          num_dis(mode_num);           //显示模式序号和标志
 298   1            
 299   1          eeprom_data_read(mode_num);  //读取channel_num、sync_bit、wind_num、power_num
 300   1              
 301   1          delay_ms(500);
 302   1          
C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 6   

 303   1          lcd_clear();                 //二次清屏
 304   1          delay_ms(30);
 305   1      
 306   1          mode_dis(DIS_OFF);
 307   1          sun_dis(~sync_bit);
 308   1          sync_dis(sync_bit);
 309   1          num_dis(power_num);
 310   1          channel_dis(channel_num);
 311   1          percentage_dis(DIS_ON);
 312   1          wind_dis(wind_num);          //刷新界面：加热符号、通道、功率、百分比、风力、同步标志
 313   1          delay_bit1 = 0;
 314   1          delay_bit2 = 0;
 315   1      
 316   1          sync_judge();               //判断同步状态
 317   1      
 318   1          temp_listen();
 319   1      
 320   1          eeprom_mode_save();         //记录模式序号
 321   1      }
 322          
 323          void sync_choose()
 324          {
 325   1          buzzer=buzzer_bit=0;
 326   1      
 327   1          sync_delay_bit = 1;         //延时1s  防止长按、短按误触 
 328   1      
 329   1          sync_bit = ~sync_bit;       //同步开or关
 330   1          sync_dis(sync_bit);
 331   1      
 332   1          sync_judge();
 333   1      
 334   1          eeprom_data_write();        //记录同步状态
 335   1      }
 336          
 337          //void power_key()
 338          //{
 339          //   lcd_clear();
 340          //}
 341          
 342          void fan_rotate()
 343          {
 344   1          fan_center_dis(DIS_ON);
 345   1          if((wind_bit == 1)&&(wind_num>0))
 346   1          {
 347   2              fan_leaf1_dis(fan_dis_bit);
 348   2              fan_leaf2_dis(~fan_dis_bit);
 349   2          }
 350   1          else
 351   1          {
 352   2              fan_leaf1_dis(DIS_ON);
 353   2              fan_leaf2_dis(DIS_OFF);
 354   2          }
 355   1      }
 356          
 357          uint8_t power_on()
 358          {
 359   1          if(scan_start_bit == 1)
 360   1          {
 361   2              if(key_val == PowerKey)
 362   2              {
 363   3                  return 0;
 364   3              }
C51 COMPILER V9.60.7.0   KEY                                                               07/24/2025 09:30:20 PAGE 7   

 365   2          }
 366   1          return 1;
 367   1      }
 368          
 369          void power_off()
 370          {
 371   1          uint8_t continue_cnt;
 372   1          if(scan_start_bit == 1)
 373   1          {
 374   2              continue_cnt = 100;
 375   2              while((key_val==PowerKey)&&(continue_cnt>0))
 376   2              {
 377   3                  continue_cnt--; 
 378   3                  delay_ms(10);
 379   3              }
 380   2              if(continue_cnt == 0)           //长按1s判断，开启同步 
 381   2              {
 382   3                  power_statu = 0;
 383   3                  eeprom_mode_save();
 384   3                  lcd_clear();
 385   3                  power_bit = 0;
 386   3                  sun_dis(DIS_OFF);
 387   3                  PWMStop();
 388   3                  on_off = 1;
 389   3              }
 390   2          }
 391   1      
 392   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    894    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     11       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
