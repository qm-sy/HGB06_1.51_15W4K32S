C51 COMPILER V9.60.7.0   TIMER                                                             01/10/2025 22:08:16 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Output\timer.obj
COMPILER INVOKED BY: D:\APP\Keil_STM32\C51\BIN\C51.EXE Src\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Inc;D:\APP\Ke
                    -il_v5\C51\INC) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) OBJECT(.\Output\timer.obj)

line level    source

   1          #include "STC15W4Kxx.h"
   2          #include "timer.h"
   3          #include "stdint.h"
   4          #include "key.h"
   5          #include "adc.h"
   6          bit fan_dis_bit = 0;
   7          bit temp_dis_bit = 0;
   8          bit zero_bit = 0;
   9          bit buzzer_bit = 1;
  10          bit scan_stop_bit = 1;
  11          bit scan_start_bit = 0;  
  12          bit master_pwm_bit = 0;
  13          bit power_bit = 1;
  14          bit power_bit2 = 0;
  15          bit wind_bit = 1;
  16          bit previous_value = 0;
  17          bit delay_bit1 = 0;
  18          bit delay_bit2 = 0;
  19          bit delay_bit3 = 0;
  20          bit temp_listen_bit = 0;
  21          uint16_t pwm_adc_val = 0;
  22          uint16_t ntc6_adc_val = 0;
  23          uint8_t pwm_adc_cnt = 0;
  24          uint8_t channel_num = 1;
  25          uint16_t tim1_t = 58400;
  26          uint8_t pwm_num_cnt = 0;
  27          uint8_t temp_listen_cnt = 1;
  28          
  29          void Tim0Init()         //11.0592Mhz  2333us
  30          {
  31   1              AUXR &= 0x7F;                   //定时器时钟12T模式
  32   1              TMOD &= 0xF0;                   //设置定时器模式
  33   1              TL0 = 0x9A;                             //设置定时初始值
  34   1              TH0 = 0xF7;                             //设置定时初始值
  35   1              TF0 = 0;                                //清除TF0标志
  36   1              TR0 = 1;                                //定时器0开始计时
  37   1      
  38   1              ET0 = 1;            //打开IE-ET0，TIM0中断
  39   1      }
  40          
  41          
  42          void Tim1Init()         //11.0592Mhz  10ms  16位手动装载
  43          {   
  44   1              AUXR &= 0xBF;       //定时器时钟12T模式
  45   1              TMOD &= 0x0F;       //设置定时器模式
  46   1              TMOD |= 0x10;       //设置定时器模式   手动/自动开关
  47   1      }
  48          
  49          void Tim3Init(void)             //10毫秒@11.0592MHz
  50          {
  51   1              T4T3M &= 0xFD;      //定时器时钟12T模式
  52   1              T3L = 0x00;         //设置定时初始值
  53   1              T3H = 0xDC;         //设置定时初始值
  54   1              T4T3M |= 0x08;      //定时器3开始计时
C51 COMPILER V9.60.7.0   TIMER                                                             01/10/2025 22:08:16 PAGE 2   

  55   1          
  56   1          IE2 |= 0x20; //打开IE2-ET2，TIM3中断
  57   1      }
  58          
  59          void ET0ISR(void) interrupt 0 
  60          {
  61   1          tempchannel1 = tempchannel2 = tempchannel3 = 1;    
  62   1              /*延时移相*/
  63   1          TL1 = tim1_t;                               //设置定时初始值
  64   1              TH1 = tim1_t>>8;                                //设置定时初始值
  65   1      
  66   1          zero_bit = 1;
  67   1          
  68   1          TR1 = 1;                            //定时器1开始计时      
  69   1          ET1 = 1; 
  70   1      }
  71          
  72          void Tim0Isr(void) interrupt 1 
  73          {
  74   1          pwm_adc_val = Get_ADC12bitResult(7);
  75   1          ntc6_adc_val = Get_ADC12bitResult(6);
  76   1          if( pwm_adc_val < 500 )
  77   1          {
  78   2              pwm_adc_cnt++;
  79   2              if( pwm_adc_cnt == 100 ) 
  80   2              {
  81   3                  pwm_adc_cnt    = 0;
  82   3                  master_pwm_bit = 0; 
  83   3                  previous_value = 0;
  84   3              }
  85   2          }
  86   1          if( pwm_adc_val > 800 )
  87   1          {
  88   2              pwm_adc_cnt = 0;
  89   2              master_pwm_bit = 1;
  90   2              previous_value = 1;
  91   2          }
  92   1      
  93   1      }
  94          
  95          void Tim1Isr(void) interrupt 3 
  96          {
  97   1      
  98   1          if((zero_bit == 1)&&(power_bit == 1))
  99   1          {
 100   2              switch(channel_num)
 101   2              {
 102   3                  case 1: {tempchannel1=0; tempchannel2=1; tempchannel3=1;}break;
 103   3                  case 2: {tempchannel1=1; tempchannel2=0; tempchannel3=1;}break;
 104   3                  case 3: {tempchannel1=1; tempchannel2=1; tempchannel3=0;}break;
 105   3                  case 4: {tempchannel1=0; tempchannel2=0; tempchannel3=1;}break;
 106   3                  case 5: {tempchannel1=1; tempchannel2=0; tempchannel3=0;}break;
 107   3                  case 6: {tempchannel1=0; tempchannel2=1; tempchannel3=0;}break;
 108   3                  case 7: {tempchannel1=0; tempchannel2=0; tempchannel3=0;}break;
 109   3              }
 110   2                  /*发送一个10us的脉冲*/
 111   2                  zero_bit = 0; 
 112   2      
 113   2                  TL1 = 0xF7;                         //设置定时初始值
 114   2                  TH1 = 0xFF;                         //设置定时初始值
 115   2          }
 116   1        
C51 COMPILER V9.60.7.0   TIMER                                                             01/10/2025 22:08:16 PAGE 3   

 117   1          else
 118   1          {
 119   2              tempchannel1 = tempchannel2 = tempchannel3 = 1;     //1-0-1的脉冲 2us
 120   2              TR1 = 0;                                //定时器关闭计时      
 121   2              ET1 = 0; 
 122   2          }
 123   1      }
 124          
 125          void Tim3Isr(void) interrupt 19 
 126          {
 127   1          static uint8_t buzzer_continue_cnt = 0;
 128   1          static uint8_t sacn_cnt = 0;
 129   1          static uint8_t key_cnt = 0;
 130   1          static uint8_t sync_delay_cnt = 0;
 131   1          static uint8_t temp_delay_cnt = 0;
 132   1          static uint8_t fan_rotate_cnt = 0;
 133   1          static uint8_t temp_rotate_cnt = 0;
 134   1          static uint16_t fan_delay_cnt = 0;
 135   1          
 136   1          if((delay_bit1 == 1)&&(delay_bit2 == 1))
 137   1          {
 138   2              fan_delay_cnt++;
 139   2              if(fan_delay_cnt==500)
 140   2              {
 141   3                  fan_delay_cnt = 0;
 142   3                  delay_bit1 = 0;
 143   3                  delay_bit2 = 0;
 144   3                  delay_bit3 = 1;
 145   3              }
 146   2          }
 147   1          if((delay_bit1&delay_bit2)==0)
 148   1          {
 149   2              fan_delay_cnt = 0;
 150   2          }
 151   1      //    if((delay_bit1 == 1)&&(delay_bit2 == 0))
 152   1      //    {
 153   1      //        fan_delay_cnt = 0;
 154   1      //    }
 155   1          fan_rotate_cnt++;
 156   1          if(fan_rotate_cnt>15)
 157   1          {
 158   2              fan_dis_bit = ~fan_dis_bit;
 159   2              fan_rotate_cnt = 0;
 160   2          }
 161   1          
 162   1          temp_rotate_cnt++;
 163   1          if(temp_rotate_cnt>50)
 164   1          {
 165   2              temp_dis_bit = ~temp_dis_bit;
 166   2              temp_rotate_cnt = 0;
 167   2          }
 168   1          
 169   1          key_cnt++;
 170   1          if(key_cnt>5)
 171   1          {
 172   2              key_cnt=0; 
 173   2              key_val = (P0&0X0f);
 174   2          }
 175   1          
 176   1          if(sync_delay_bit == 1)
 177   1          {
 178   2              sync_delay_cnt++;
C51 COMPILER V9.60.7.0   TIMER                                                             01/10/2025 22:08:16 PAGE 4   

 179   2              if(sync_delay_cnt>150)
 180   2              {
 181   3                  sync_delay_bit = 0;
 182   3                  sync_delay_cnt = 0;
 183   3              }
 184   2          }
 185   1      
 186   1          if(temp_delay_bit == 1)
 187   1          {
 188   2              temp_delay_cnt++;
 189   2              if(temp_delay_cnt>150)
 190   2              {
 191   3                  temp_delay_cnt = 0;
 192   3              }
 193   2          }
 194   1          
 195   1          if(buzzer_bit==0)
 196   1          {
 197   2              buzzer_continue_cnt++;
 198   2              if(buzzer_continue_cnt>10)
 199   2              {
 200   3                  buzzer_continue_cnt=0; 
 201   3                  buzzer=buzzer_bit=1;
 202   3              }
 203   2          } 
 204   1          
 205   1          if(scan_stop_bit == 1)
 206   1          {
 207   2              sacn_cnt++;
 208   2              if(sacn_cnt>10)
 209   2              {
 210   3                  scan_start_bit = 1;
 211   3                  scan_stop_bit = 0;
 212   3                  sacn_cnt = 0;
 213   3              }
 214   2          }
 215   1      
 216   1          // if(temp_listen_bit == 1)
 217   1          // {
 218   1          //     temp_listen_cnt++;
 219   1          //     if(temp_listen_cnt>150)
 220   1          //     {
 221   1          //         temp_listen_bit = 0;
 222   1          //         temp_listen_cnt = 0;
 223   1          //     }
 224   1          // }
 225   1             
 226   1      //    if(P07==0)
 227   1      //    {
 228   1      //        master_pwm_bit = 1;   //24V接入
 229   1      //        previous_value = 1;
 230   1      //    }
 231   1      //    if(P07==1)
 232   1      //    {
 233   1      //        master_pwm_bit = 0;
 234   1      //        previous_value = 0;
 235   1      //    }
 236   1      //    
 237   1          
 238   1      
 239   1      }
 240          
C51 COMPILER V9.60.7.0   TIMER                                                             01/10/2025 22:08:16 PAGE 5   

 241          void power_crl(uint8_t power_num)
 242          { 
 243   1          if(power_bit==1)
 244   1          {
 245   2              ET1 = 1;
 246   2          }
 247   1          else
 248   1          {
 249   2              ET1 = 0;
 250   2          }
 251   1          
 252   1          tim1_t = power_num*64+58400;
 253   1          
 254   1      //    TL1 = tim1_t;                   //设置定时初始值
 255   1      //    TH1 = tim1_t>>8;                          //设置定时初始值
 256   1      
 257   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    593    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     15    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
